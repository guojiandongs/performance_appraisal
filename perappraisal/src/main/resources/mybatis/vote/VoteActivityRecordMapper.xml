<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.vote.dao.VoteActivityRecordDao">
	<!--查询投票统计结果-->
	<select id="getVoteResult" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT n1.id,
			n1.`activity_options`,
			n2.`other`,
			COUNT(n2.`option_id`) AS votenum,
			(SELECT COUNT(*) FROM vote_activity_record d
				WHERE d.`activity_id` = #{activityId}) AS total,
			ROUND(COUNT(n2.`option_id`)/(SELECT COUNT(*) FROM vote_activity_record d
				WHERE d.`activity_id` = #{activityId}) *100,0) AS percentage,
			CASE WHEN (SELECT COUNT(*) FROM vote_activity_record r
				WHERE r.option_id = n1.id AND r.openid = #{openid} )> 0
				THEN '1'
				ELSE '0' END
			AS selected

		FROM `vote_activity_option` n1
		LEFT JOIN vote_activity_record n2 ON n1.id = n2.`option_id`

		WHERE n1.`activity_id` = #{activityId}
		GROUP BY n1.id,n1.`activity_options`
		order by COUNT(n2.`option_id`) desc
	</select>

	<select id="get" resultType="com.bootdo.vote.domain.VoteActivityRecordDO">
		select `id`,`activity_id`,`openid`,`option_id`,`vote_date` from vote_activity_record where id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.vote.domain.VoteActivityRecordDO">
		select `id`,`activity_id`,`openid`,`option_id`,`vote_date`,`other` from vote_activity_record
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="activityId != null and activityId != ''"> and activity_id = #{activityId} </if>
		  		  <if test="openid != null and openid != ''"> and openid = #{openid} </if>
		  		  <if test="optionId != null and optionId != ''"> and option_id = #{optionId} </if>
		  		  <if test="voteDate != null and voteDate != ''"> and DATE(vote_date) = #{voteDate} </if>
                    <if test="other != null and other != ''"> and DATE(other) = #{other} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from vote_activity_record
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="activityId != null and activityId != ''"> and activity_id = #{activityId} </if>
		  		  <if test="openid != null and openid != ''"> and openid = #{openid} </if>
			 	  <if test="optionId != null and optionId != ''"> and option_id = #{optionId} </if>
			 	  <if test="voteDate != null and voteDate != ''"> and DATE(vote_date) = #{voteDate} </if>
             <if test="other != null and other != ''"> and DATE(other) = #{other} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.vote.domain.VoteActivityRecordDO">
		insert into vote_activity_record
		(
			`id`, 
			`activity_id`, 
			`openid`,
			`option_id`,
			`vote_date`,
			`other`
		)
		values
		(
			#{id}, 
			#{activityId}, 
			#{openid},
			#{optionId},
			#{voteDate},
			#{other}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.vote.domain.VoteActivityRecordDO">
		update vote_activity_record 
		<set>
			<if test="activityId != null">`activity_id` = #{activityId}, </if>
			<if test="openid != null">`openid` = #{openid}</if>
			<if test="optionId != null">`option_id` = #{optionId}</if>
			<if test="voteDate != null">`vote_date` = #{voteDate}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from vote_activity_record where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from vote_activity_record where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>